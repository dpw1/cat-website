{"version":3,"file":"component---src-pages-shop-js-e37570c78f9aa221f3b8.js","mappings":"mLAwCA,EArCe,SAACA,GACd,IACEC,EAQED,EARFC,SACAC,EAOEF,EAPFE,KACAC,EAMEH,EANFG,SACAC,EAKEJ,EALFI,MACAC,EAIEL,EAJFK,QACAC,EAGEN,EAHFM,OANF,EASIN,EAFFO,QAAAA,OAPF,MAOY,6BAPZ,IASIP,EADFQ,qBAAAA,OARF,SAWMC,EAAgB,CACpBC,gBAAiBH,EACjBI,qBAA6BC,IAAZP,EAAA,OAA+BA,EAA/B,IAA4C,OAC7DC,OAAQA,EACRF,MAAOA,GAGT,OACE,uBAAKS,UCpBS,6BDoBeC,MAAOL,GAClC,uBAAKI,UCvBU,gCDuBiBC,MAAO,CAAEb,SAAUA,IACjD,0BAAKC,GACJC,GACC,wBACEU,UAAcE,oCACa,IAAzBP,EC3BoB,6CD2B0C,KAG/DL,IAMZ,C,qEEpCU,EAAQ,mC,UCwCnB,EArCoB,SAAC,GAAgB,IAC/Ba,EAD8B,EAAbC,OAUrB,OARID,GAAwC,iBAAjBA,IAEvBA,EADEA,EAAaE,QAAQ,MAAQ,EAChBF,EAAaG,MAAM,KAEnB,CAACH,IAKlB,uBAAK,sBAAiBH,UDfD,0CCgBlBG,GACCA,EAAaI,KAAI,SAACC,EAAOC,GAAR,OACf,wBAAMC,IAAKD,GACRA,EAAa,GACZ,wBAAMT,UDlBA,qCCmBJ,gBAACW,EAAA,EAAD,CAAMC,OAAQ,WAGA,iBAAVJ,GAAsB,SAAUA,GACtC,qBAAGR,UAAWE,EAAcW,KAAML,EAAMM,MACrCN,EAAMO,MAAMC,QAGC,iBAAVR,KAAwB,SAAUA,IACxC,wBAAMR,UAAWE,GAAeM,EAAMO,MAAMC,QAE5B,iBAAVR,GACN,wBAAMR,UAAWE,GAAeM,EAAMQ,QAhB3B,IAsBxB,C,sHCvCUC,EAAsB,kDC2BjC,EAtBqB,SAAC9B,GACpB,OACE,uBAAKa,UDNS,oCCOZ,uBACEA,UAAWE,EACXgB,QAAS,kBAAMC,EAAAA,EAAAA,UAAS,UAAf,EACTC,KAAM,gBAEN,gBAACT,EAAA,EAAD,CAAMC,OAAQ,UAEhB,uBACEZ,UAAWE,EACXgB,QAAS,kBAAMC,EAAAA,EAAAA,UAAS,QAAf,EACTC,KAAM,eACNnB,MAAO,CAAEoB,UAAW,mBAEpB,gBAACV,EAAA,EAAD,CAAMC,OAAQ,UAIrB,C,+PCsGD,G,QA/EiB,SAAC,GAAyB,IAAjBU,EAAgB,EAAtBC,KAClB,GAAoCC,EAAAA,EAAAA,WAAS,GAA1BC,GAAnB,WACMF,GAAOG,EAAAA,EAAAA,GAAwB,EAAG,SAElCC,EAAWL,EAAUM,cAAcC,OAEzCC,EAAAA,EAAAA,YAAU,WACR,QAAe/B,IAAXgC,OAEF,OADAA,OAAOC,iBAAiB,UAAWC,GAC5B,kBAAMF,OAAOG,oBAAoB,UAAWD,EAA5C,CAEV,GAAE,IAEH,IAAMA,EAAgB,SAACE,QACFpC,KAAfoC,aAAA,EAAAA,EAAGC,UACW,KAAdD,EAAEC,SAAgBX,GAAc,EACrC,EAED,OACE,gBAACY,EAAA,EAAD,KACE,uBAAKrC,UC1DO,4BD2DV,gBAACsC,EAAA,EAAD,CACElD,SAAU,QACVC,KAAI,eACJC,SACE,mGAGJ,gBAAC,IAAD,CAAWiD,KAAM,QAASC,QAAS,OACjC,uBAAKxC,UCtEY,qCDuEf,wBAAMA,UCzEK,iCDyEyB2B,EAASc,OAA7C,WA2BF,uBAAKzC,UChGe,wCDiGlB,wBAAMA,UClGW,uCDkGjB,aACA,gBAAC0C,EAAA,EAAD,CACEC,QAAS,EACThB,SAAUA,EACVJ,KAAMA,OAYd,gBAACqB,EAAA,EAAD,MAGL,E","sources":["webpack://gatsby-ecommerce-theme/./src/components/Banner/Banner.js","webpack://gatsby-ecommerce-theme/./src/components/Banner/Banner.module.css","webpack://gatsby-ecommerce-theme/./src/components/Breadcrumbs/BreadCrumbs.module.css","webpack://gatsby-ecommerce-theme/./src/components/Breadcrumbs/BreadCrumbs.js","webpack://gatsby-ecommerce-theme/./src/components/LayoutOption/LayoutOption.module.css","webpack://gatsby-ecommerce-theme/./src/components/LayoutOption/LayoutOption.js","webpack://gatsby-ecommerce-theme/./src/pages/shop.js","webpack://gatsby-ecommerce-theme/./src/pages/shop.module.css"],"sourcesContent":["import React from 'react';\r\nimport * as styles from './Banner.module.css';\r\n\r\nconst Banner = (props) => {\r\n  const {\r\n    maxWidth,\r\n    name,\r\n    subtitle,\r\n    color,\r\n    bgImage,\r\n    height,\r\n    bgColor = 'var(--standard-light-grey)',\r\n    hideSubtitleOnMobile = true,\r\n  } = props;\r\n\r\n  const customStyling = {\r\n    backgroundColor: bgColor,\r\n    backgroundImage: bgImage !== undefined ? `url(${bgImage})` : 'none',\r\n    height: height,\r\n    color: color,\r\n  };\r\n\r\n  return (\r\n    <div className={styles.root} style={customStyling}>\r\n      <div className={styles.content} style={{ maxWidth: maxWidth }}>\r\n        <h2>{name}</h2>\r\n        {subtitle && (\r\n          <span\r\n            className={`${styles.subtitle} ${\r\n              hideSubtitleOnMobile === true ? styles.hideSubtitleOnMobile : ''\r\n            }`}\r\n          >\r\n            {subtitle}\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","// extracted by mini-css-extract-plugin\nexport var content = \"Banner-module--content--B-TYt\";\nexport var hideSubtitleOnMobile = \"Banner-module--hideSubtitleOnMobile--vie8n\";\nexport var root = \"Banner-module--root--0Lf0Y\";\nexport var subtitle = \"Banner-module--subtitle--SN6e3\";","// extracted by mini-css-extract-plugin\nexport var breadcrumbs = \"BreadCrumbs-module--breadcrumbs--993H2\";\nexport var crumb = \"BreadCrumbs-module--crumb--Mlfff\";\nexport var spacer = \"BreadCrumbs-module--spacer--lQNGb\";","import React from 'react';\r\n\r\nimport * as styles from './BreadCrumbs.module.css';\r\nimport Icon from '../Icons/Icon';\r\n\r\nconst Breadcrumbs = ({ crumbs }) => {\r\n  let crumbsOutput = crumbs;\r\n  if (crumbsOutput && typeof crumbsOutput !== 'object') {\r\n    if (crumbsOutput.indexOf('>') > -1) {\r\n      crumbsOutput = crumbsOutput.split('>');\r\n    } else {\r\n      crumbsOutput = [crumbsOutput];\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div data-breadcrumbs className={styles.breadcrumbs}>\r\n      {crumbsOutput &&\r\n        crumbsOutput.map((crumb, crumbIndex) => (\r\n          <span key={crumbIndex}>\r\n            {crumbIndex > 0 && (\r\n              <span className={styles.spacer}>\r\n                <Icon symbol={'caret'}></Icon>\r\n              </span>\r\n            )}\r\n            {typeof crumb === 'object' && 'link' in crumb && (\r\n              <a className={styles.crumb} href={crumb.link}>\r\n                {crumb.label.trim()}\r\n              </a>\r\n            )}\r\n            {typeof crumb === 'object' && !('link' in crumb) && (\r\n              <span className={styles.crumb}>{crumb.label.trim()}</span>\r\n            )}\r\n            {typeof crumb !== 'object' && (\r\n              <span className={styles.crumb}>{crumb.trim()}</span>\r\n            )}\r\n          </span>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Breadcrumbs;\r\n","// extracted by mini-css-extract-plugin\nexport var layoutIconContainer = \"LayoutOption-module--layoutIconContainer--pBLZx\";\nexport var root = \"LayoutOption-module--root--kxagT\";","import React from 'react';\r\n\r\nimport { navigate } from 'gatsby';\r\nimport Icon from '../Icons/Icon';\r\nimport * as styles from './LayoutOption.module.css';\r\n\r\nconst LayoutOption = (props) => {\r\n  return (\r\n    <div className={styles.root}>\r\n      <div\r\n        className={styles.layoutIconContainer}\r\n        onClick={() => navigate('/shopV2')}\r\n        role={'presentation'}\r\n      >\r\n        <Icon symbol={'list'}></Icon>\r\n      </div>\r\n      <div\r\n        className={styles.layoutIconContainer}\r\n        onClick={() => navigate('/shop')}\r\n        role={'presentation'}\r\n        style={{ transform: 'rotate(-90deg)' }}\r\n      >\r\n        <Icon symbol={'list'}></Icon>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LayoutOption;\r\n","import React, { useState, useEffect } from 'react';\r\nimport * as styles from './shop.module.css';\r\n\r\nimport Banner from '../components/Banner';\r\nimport Breadcrumbs from '../components/Breadcrumbs';\r\nimport CardController from '../components/CardController';\r\nimport Container from '../components/Container';\r\nimport Chip from '../components/Chip';\r\nimport Icon from '../components/Icons/Icon';\r\nimport Layout from '../components/Layout';\r\nimport LayoutOption from '../components/LayoutOption';\r\nimport ProductCardGrid from '../components/ProductCardGrid';\r\nimport { generateMockProductData } from '../helpers/mock';\r\nimport Button from '../components/Button';\r\nimport Config from '../config.json';\r\nimport { graphql } from 'gatsby';\r\n\r\nexport const query = graphql`\r\n  {\r\n    allWcProducts {\r\n      edges {\r\n        node {\r\n          name\r\n          sku\r\n          price\r\n          description\r\n          tags {\r\n            name\r\n            slug\r\n            id\r\n          }\r\n          categories {\r\n            id\r\n            name\r\n          }\r\n          images {\r\n            src\r\n            localFile {\r\n              childImageSharp {\r\n                gatsbyImageData(width: 700)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ShopPage = ({ data: _products }) => {\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const data = generateMockProductData(6, 'woman');\r\n\r\n  const products = _products.allWcProducts.edges;\r\n\r\n  useEffect(() => {\r\n    if (window !== undefined) {\r\n      window.addEventListener('keydown', escapeHandler);\r\n      return () => window.removeEventListener('keydown', escapeHandler);\r\n    }\r\n  }, []);\r\n\r\n  const escapeHandler = (e) => {\r\n    if (e?.keyCode === undefined) return;\r\n    if (e.keyCode === 27) setShowFilter(false);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <div className={styles.root}>\r\n        <Banner\r\n          maxWidth={'650px'}\r\n          name={`Cat Products`}\r\n          subtitle={\r\n            'Hand picked collection of the cutest cat products out there. Our collection is always growing!'\r\n          }\r\n        />\r\n        <Container size={'large'} spacing={'min'}>\r\n          <div className={styles.metaContainer}>\r\n            <span className={styles.itemCount}>{products.length} items</span>\r\n            {/* <div className={styles.controllerContainer}>\r\n              <div\r\n                className={styles.iconContainer}\r\n                role={'presentation'}\r\n                onClick={() => setShowFilter(!showFilter)}\r\n              >\r\n                <Icon symbol={'filter'} />\r\n                <span>Filters</span>\r\n              </div>\r\n              <div\r\n                className={`${styles.iconContainer} ${styles.sortContainer}`}\r\n              >\r\n                <span>Sort by</span>\r\n                <Icon symbol={'caret'} />\r\n              </div>\r\n            </div> */}\r\n          </div>\r\n          {/* <CardController\r\n            closeFilter={() => setShowFilter(false)}\r\n            visible={showFilter}\r\n            filters={Config.filters}\r\n          />\r\n          <div className={styles.chipsContainer}>\r\n            <Chip name={'XS'} />\r\n            <Chip name={'S'} />\r\n          </div> */}\r\n          <div className={styles.productContainer}>\r\n            <span className={styles.mobileItemCount}>476 items</span>\r\n            <ProductCardGrid\r\n              columns={4}\r\n              products={products}\r\n              data={data}\r\n            ></ProductCardGrid>\r\n          </div>\r\n          {/* <div className={styles.loadMoreContainer}>\r\n            <span>X of {products.length}</span>\r\n            <Button fullWidth level={'secondary'}>\r\n              LOAD MORE\r\n            </Button>\r\n          </div> */}\r\n        </Container>\r\n      </div>\r\n\r\n      <LayoutOption />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ShopPage;\r\n","// extracted by mini-css-extract-plugin\nexport var bannerContainer = \"shop-module--bannerContainer--brq4z\";\nexport var breadcrumbContainer = \"shop-module--breadcrumbContainer---3cGQ\";\nexport var chipsContainer = \"shop-module--chipsContainer--UbeTG\";\nexport var controllerContainer = \"shop-module--controllerContainer--p1bWp\";\nexport var iconContainer = \"shop-module--iconContainer--TcPlZ\";\nexport var itemCount = \"shop-module--itemCount--sJs8x\";\nexport var loadMoreContainer = \"shop-module--loadMoreContainer--062KQ\";\nexport var metaContainer = \"shop-module--metaContainer--+Wwau\";\nexport var mobileItemCount = \"shop-module--mobileItemCount--YbdZR\";\nexport var productContainer = \"shop-module--productContainer--8RKnL\";\nexport var root = \"shop-module--root--zkAsS\";\nexport var sortContainer = \"shop-module--sortContainer--ttntf\";\nexport var subtitleStyle = \"shop-module--subtitleStyle--dh+xw\";"],"names":["props","maxWidth","name","subtitle","color","bgImage","height","bgColor","hideSubtitleOnMobile","customStyling","backgroundColor","backgroundImage","undefined","className","style","styles","crumbsOutput","crumbs","indexOf","split","map","crumb","crumbIndex","key","Icon","symbol","href","link","label","trim","layoutIconContainer","onClick","navigate","role","transform","_products","data","useState","setShowFilter","generateMockProductData","products","allWcProducts","edges","useEffect","window","addEventListener","escapeHandler","removeEventListener","e","keyCode","Layout","Banner","size","spacing","length","ProductCardGrid","columns","LayoutOption"],"sourceRoot":""}